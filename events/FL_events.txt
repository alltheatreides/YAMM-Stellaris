namespace = FL_event

event = {
	id = FL_event.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {	
		every_country  = {
			limit = { 
				OR = { 
					is_country_type = fallen_empire 
					is_country_type = awakened_fallen_empire
					is_country_type = default
				}
			}
			country_event = { id = FL_event.2 }
		}
	}			
}

country_event = {
    id = FL_event.2
    hide_window = yes
    is_triggered_only = yes	

	immediate = {		
		every_owned_fleet = {
			limit = {
				is_ship_class = shipclass_military
				exists = solar_system
			}
			save_event_target_as = SGM_result_scope
			
			owner={SGM_country_get_max_naval_capacity=yes}
						
			set_variable={which=SGM_fleet_size_accumulated value=0}			
			solar_system={
				every_fleet_in_system={
					limit={
						is_ship_class = shipclass_military
						owner = {is_same_empire = root}
					}
					SGM_fleet_acc_fleet_size = yes
				}				
			}
			#log="1 [Owner.GetName]-[This.GetName] SGM_country_get_max_naval_capacity: [This.SGM_max_naval_capacity]"
			#log="2 [Owner.GetName]-[This.GetName] SGM_fleet_size_accumulated: [This.SGM_fleet_size_accumulated]"
			
			#--------------------------------------------------------------------------------------------
			# Calculate Combat Penalty
			#--------------------------------------------------------------------------------------------
			set_variable      = {which=FL_supported_fleet value=SGM_max_naval_capacity}
			multiply_variable = {which=FL_supported_fleet value=0.1}
			change_variable   = {which=FL_supported_fleet value=10}	
			#----------------------------------------------------------------------------------------
			set_variable      = {which=FL_supported_fleet_neg value=FL_supported_fleet}
			multiply_variable = {which=FL_supported_fleet_neg value=-1}
			#----------------------------------------------------------------------------------------
			set_variable      = {which=FL_excess_fleet value=SGM_fleet_size_accumulated}
			change_variable   = {which=FL_excess_fleet value=FL_supported_fleet_neg}
			#----------------------------------------------------------------------------------------
			if={limit={check_variable={which=FL_excess_fleet value>0}}
				set_variable  	= {which=FL_excess_fleet_rel value=FL_excess_fleet}
				divide_variable = {which=FL_excess_fleet_rel value=SGM_max_naval_capacity}
				#------------------------------------------------------------------------------------
				set_variable 	  = {which=SGM_ship_modifier_weapon_damage value=FL_excess_fleet_rel}
				multiply_variable = {which=SGM_ship_modifier_weapon_damage value=0.225}
				if={limit={check_variable={which=SGM_ship_modifier_weapon_damage value>0.25}}
					set_variable = {which=SGM_ship_modifier_weapon_damage value=0.25}
				}
				if={limit={
					exists = leader
					leader = { leader_class = admiral }
					}
					leader={
						switch={
							trigger = has_level
							1 = {prev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.015}}}
							2 = {prev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.03}}}
							3 = {prev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.045}}}
							4 = {prev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.06}}}
							5 = {prev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.075}}}
						}
					}
				}
				solar_system={
					every_system_planet={
						if={limit={
								exists = owner
								owner ={is_same_empire = root}
								has_spaceport = yes
							}
							prevprev={change_variable = {which=SGM_ship_modifier_weapon_damage value=-0.1}}
						}						
					}
				}				 
			
				if={limit={check_variable={which=SGM_ship_modifier_weapon_damage value>0}}
					if={
						limit={
							root={
								is_ai=yes
								is_country_type = default
							}
						}
						multiply_variable = {which=SGM_ship_modifier_weapon_damage value=0.66} #AI is bad anyway...
					}
					
					multiply_variable = {which=SGM_ship_modifier_weapon_damage value=100}
					SGM_ship_modifier_weapon_damage_add = yes
				}				
			}		
			
			#--------------------------------------------------------------------------------------------
			# Calculate Upkeep Penalty
			#--------------------------------------------------------------------------------------------
			set_variable = {which=SGM_ship_modifier_upkeep value=0}
			if={limit={
				solar_system={exists = space_owner}
				solar_system={space_owner={is_same_empire = root}}				
				}
				#fleet is in own system
				set_variable      = {which=FL_supported_fleet value=SGM_max_naval_capacity}
				multiply_variable = {which=FL_supported_fleet value=0.33}
				change_variable   = {which=FL_supported_fleet value=10}
				#----------------------------------------------------------------------------------------
				set_variable      = {which=FL_supported_fleet_neg value=FL_supported_fleet}
				multiply_variable = {which=FL_supported_fleet_neg value=-1}
				#----------------------------------------------------------------------------------------
				set_variable      = {which=FL_excess_fleet value=SGM_fleet_size_accumulated}
				change_variable   = {which=FL_excess_fleet value=FL_supported_fleet_neg}
				#----------------------------------------------------------------------------------------
				if={limit={check_variable={which=FL_excess_fleet value>0}}
					set_variable  	= {which=FL_excess_fleet_rel value=FL_excess_fleet}
					divide_variable = {which=FL_excess_fleet_rel value=FL_supported_fleet}
					#------------------------------------------------------------------------------------
					set_variable 	  = {which=SGM_ship_modifier_upkeep value=FL_excess_fleet_rel}
					multiply_variable = {which=SGM_ship_modifier_upkeep value=0.13} 
					if={limit={check_variable={which=SGM_ship_modifier_upkeep value>0.25}}
						set_variable = {which=SGM_ship_modifier_upkeep value=0.25}
					}
				}
			else={
				#fleet is in foreign system
				set_variable      = {which=FL_supported_fleet value=SGM_max_naval_capacity}
				multiply_variable = {which=FL_supported_fleet value=0.25}
				change_variable   = {which=FL_supported_fleet value=10}
				#----------------------------------------------------------------------------------------
				set_variable      = {which=FL_supported_fleet_neg value=FL_supported_fleet}
				multiply_variable = {which=FL_supported_fleet_neg value=-1}
				#----------------------------------------------------------------------------------------
				set_variable      = {which=FL_excess_fleet value=SGM_fleet_size_accumulated}
				change_variable   = {which=FL_excess_fleet value=FL_supported_fleet_neg}
				#----------------------------------------------------------------------------------------
				if={limit={check_variable={which=FL_excess_fleet value>0}}
					set_variable  	= {which=FL_excess_fleet_rel value=FL_excess_fleet}
					divide_variable = {which=FL_excess_fleet_rel value=FL_supported_fleet}
					#------------------------------------------------------------------------------------
					set_variable 	  = {which=SGM_ship_modifier_upkeep value=FL_excess_fleet_rel}
					multiply_variable = {which=SGM_ship_modifier_upkeep value=0.175}
					if={limit={check_variable={which=SGM_ship_modifier_upkeep value>0.5}}
						set_variable = {which=SGM_ship_modifier_upkeep value=0.5}
					}
				}				
			}}
			if={limit={check_variable={which=SGM_ship_modifier_upkeep value>0}}
				if={limit={
						root={
							is_ai=yes
							is_country_type = default
						}
					}
					multiply_variable = {which=SGM_ship_modifier_upkeep value=0.33} #AI is bad anyway...
				}
				#----------------------------------------------------------------------------------------
				multiply_variable = {which=SGM_ship_modifier_upkeep value=100}
				SGM_ship_modifier_upkeep_add = yes
				#----------------------------------------------------------------------------------------				
			}			
		}		
	}	
}