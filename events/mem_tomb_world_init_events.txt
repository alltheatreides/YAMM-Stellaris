namespace = mem_tomb_world

# This event flags tomb worlds for later use as anomaly planets
# on_action (on_game_start
event = {
	id = mem_tomb_world.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			every_planet_within_border = {
				limit = {
					is_planet_class = pc_nuked
				}
				set_planet_flag = mem_tomb_world_not_usable
			}
		}
		# One has to be there initially or it fails to set the first flag for spawned systems
		random_country = {
			limit = {
				is_ai = no
			}
			capital_scope = {
				spawn_system = {
					min_distance = 50
					max_distance = 90
					initializer = "mem_nuked_init"
				}
			}
		}
		random_list = {
			60 = {}
			40 = {
				random_country = {
					limit = {
						is_ai = no
					}
					capital_scope = {
						spawn_system = {
							min_distance = 40
							max_distance = 120
							initializer = "mem_nuked_init"
						}
					}
				}
				random_planet = {
					limit = {
						has_planet_flag = mem_tomb_world_spawned
					}
					set_planet_flag = mem_tomb_world_matrix
					set_planet_flag = mem_tomb_world_already_used
					prevent_anomaly = yes
					remove_planet_flag = mem_tomb_world_spawned
				}
			}
		}
		random_list = {
			60 = {}
			40 = {
				random_country = {
					limit = {
						is_ai = no
					}
					capital_scope = {
						spawn_system = {
							min_distance = 40
							max_distance = 120
							initializer = "mem_nuked_init"
						}
					}
				}
				random_planet = {
					limit = {
						has_planet_flag = mem_tomb_world_spawned
					}
					set_planet_flag = mem_tomb_world_enterprise_fallen
					set_planet_flag = mem_tomb_world_already_used
					prevent_anomaly = yes
					remove_planet_flag = mem_tomb_world_spawned
				}
			}
		}
		random_list = {
			60 = {}
			40 = {
				random_country = {
					limit = {
						is_ai = no
					}
					capital_scope = {
						spawn_system = {
							min_distance = 40
							max_distance = 120
							initializer = "mem_nuked_init"
						}
					}
				}
				random_planet = {
					limit = {
						has_planet_flag = mem_tomb_world_spawned
					}
					set_planet_flag = mem_tomb_world_giant_tank
					set_planet_flag = mem_tomb_world_already_used
					prevent_anomaly = yes
					remove_planet_flag = mem_tomb_world_spawned
				}
			}
		}
		random_list = {
			60 = {}
			40 = {
				random_country = {
					limit = {
						is_ai = no
					}
					capital_scope = {
						spawn_system = {
							min_distance = 40
							max_distance = 120
							initializer = "mem_nuked_init"
						}
					}
				}
				random_planet = {
					limit = {
						has_planet_flag = mem_tomb_world_spawned
					}
					set_planet_flag = mem_tomb_world_abandoned_mecha
					set_planet_flag = mem_tomb_world_already_used
					prevent_anomaly = yes
					remove_planet_flag = mem_tomb_world_spawned
				}
			}
		}
		random_list = {
			60 = {}
			40 = {
				random_country = {
					limit = {
						is_ai = no
					}
					capital_scope = {
						spawn_system = {
							min_distance = 40
							max_distance = 120
							initializer = "mem_nuked_init"
						}
					}
				}
				random_planet = {
					limit = {
						has_planet_flag = mem_tomb_world_spawned
					}
					set_planet_flag = mem_tomb_world_command_system
					set_planet_flag = mem_tomb_world_already_used
					prevent_anomaly = yes
					remove_planet_flag = mem_tomb_world_spawned
				}
			}
		}		
		IF = {
			limit = {
				any_system = {
					any_planet = {
						is_planet_class = pc_nuked
						NOR = {
							has_planet_flag = mem_tomb_world_not_usable
							has_planet_flag = mem_tomb_world_already_used
						}
					}
				}
				NOT = {
					any_system = {
						any_planet = {
							has_planet_flag = mem_tomb_world_matrix
						}
					}
				}
			}
			random_planet = {
				limit = {
					is_planet_class = pc_nuked
					NOR = {
						has_planet_flag = mem_tomb_world_not_usable
						has_planet_flag = mem_tomb_world_already_used
					}
				}
				random_list = {
					60 = {}
					40 = {
						set_planet_flag = mem_tomb_world_matrix
						set_planet_flag = mem_tomb_world_already_used
						prevent_anomaly = yes
					}
				}
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						is_planet_class = pc_nuked
						NOR = {
							has_planet_flag = mem_tomb_world_not_usable
							has_planet_flag = mem_tomb_world_already_used
						}
					}
				}
				NOT = {
					any_system = {
						any_planet = {
							has_planet_flag = mem_tomb_world_enterprise_fallen
						}
					}
				}
			}
			random_planet = {
				limit = {
					is_planet_class = pc_nuked
					NOR = {
						has_planet_flag = mem_tomb_world_not_usable
						has_planet_flag = mem_tomb_world_already_used
					}
				}
				random_list = {
					60 = {}
					40 = {
						set_planet_flag = mem_tomb_world_enterprise_fallen
						set_planet_flag = mem_tomb_world_already_used
						prevent_anomaly = yes
					}
				}
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						is_planet_class = pc_nuked
						NOR = {
							has_planet_flag = mem_tomb_world_not_usable
							has_planet_flag = mem_tomb_world_already_used
						}
					}
				}
				NOT = {
					any_system = {
						any_planet = {
							has_planet_flag = mem_tomb_world_giant_tank
						}
					}
				}
			}
			random_planet = {
				limit = {
					is_planet_class = pc_nuked
					NOR = {
						has_planet_flag = mem_tomb_world_not_usable
						has_planet_flag = mem_tomb_world_already_used
					}
				}
				random_list = {
					60 = {}
					40 = {
						set_planet_flag = mem_tomb_world_giant_tank
						set_planet_flag = mem_tomb_world_already_used
						prevent_anomaly = yes
					}
				}
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						is_planet_class = pc_nuked
						NOR = {
							has_planet_flag = mem_tomb_world_not_usable
							has_planet_flag = mem_tomb_world_already_used
						}
					}
				}
				NOT = {
					any_system = {
						any_planet = {
							has_planet_flag = mem_tomb_world_abandoned_mecha
						}
					}
				}
			}
			random_planet = {
				limit = {
					is_planet_class = pc_nuked
					NOR = {
						has_planet_flag = mem_tomb_world_not_usable
						has_planet_flag = mem_tomb_world_already_used
					}
				}
				random_list = {
					60 = {}
					40 = {
						set_planet_flag = mem_tomb_world_abandoned_mecha
						set_planet_flag = mem_tomb_world_already_used
						prevent_anomaly = yes
					}
				}
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						is_planet_class = pc_nuked
						NOR = {
							has_planet_flag = mem_tomb_world_not_usable
							has_planet_flag = mem_tomb_world_already_used
						}
					}
				}
				NOT = {
					any_system = {
						any_planet = {
							has_planet_flag = mem_tomb_world_command_system
						}
					}
				}
			}
			random_planet = {
				limit = {
					is_planet_class = pc_nuked
					NOR = {
						has_planet_flag = mem_tomb_world_not_usable
						has_planet_flag = mem_tomb_world_already_used
					}
				}
				random_list = {
					60 = {}
					40 = {
						set_planet_flag = mem_tomb_world_command_system
						set_planet_flag = mem_tomb_world_already_used
						prevent_anomaly = yes
					}
				}
			}
		}
	}
}

# On_action (on_survey)
# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
ship_event = {
	id = mem_tomb_world.2
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			has_planet_flag = mem_tomb_world_already_used
			has_owner = no
			is_planet_class = pc_nuked
		}
		owner = {
			is_ai = no
		}
	}
	
	immediate = {
		IF = {
			limit = {
				FROM = {
					has_planet_flag = mem_tomb_world_matrix
				}
			}
			FROM = {
				add_anomaly = mem_matrix_category
				remove_planet_flag = mem_tomb_world_matrix
				remove_planet_flag = mem_tomb_world_already_used
			}
		}
		IF = {
			limit = {
				FROM = {
					has_planet_flag = mem_tomb_world_enterprise_fallen
				}
			}
			FROM = {
				add_anomaly = mem_enterprise_fallen_category
				remove_planet_flag = mem_tomb_world_enterprise_fallen
				remove_planet_flag = mem_tomb_world_already_used
			}
		}
		IF = {
			limit = {
				FROM = {
					has_planet_flag = mem_tomb_world_giant_tank
				}
			}
			FROM = {
				add_anomaly = mem_giant_tank_category
				remove_planet_flag = mem_tomb_world_giant_tank
				remove_planet_flag = mem_tomb_world_already_used
			}
		}
		IF = {
			limit = {
				FROM = {
					has_planet_flag = mem_tomb_world_abandoned_mecha
				}
			}
			FROM = {
				add_anomaly = mem_abandoned_mecha_category
				remove_planet_flag = mem_tomb_world_abandoned_mecha
				remove_planet_flag = mem_tomb_world_already_used
			}
		}
		IF = {
			limit = {
				FROM = {
					has_planet_flag = mem_tomb_world_command_system
				}
			}
			FROM = {
				add_anomaly = mem_command_system_category
				remove_planet_flag = mem_tomb_world_command_system
				remove_planet_flag = mem_tomb_world_already_used
			}
		}
	}
}

# for testing
planet_event = {
	id = mem_tomb_world.3
	hide_window = yes
	
	is_triggered_only = yes
	
	
	immediate = {
		set_planet_flag = mem_tomb_world_matrix
		set_planet_flag = mem_tomb_world_already_used
		prevent_anomaly = yes
	}
}

# for testing
country_event = {
	id = mem_tomb_world.4
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		IF = {
			limit = {
				any_system = {
					any_planet = {
						has_planet_flag = mem_tomb_world_matrix
					}
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = mem_tomb_world_matrix
				}
				save_event_target_as = mem_tomb_world_location_1
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						has_planet_flag = mem_tomb_world_enterprise_fallen
					}
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = mem_tomb_world_enterprise_fallen
				}
				save_event_target_as = mem_tomb_world_location_2
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						has_planet_flag = mem_tomb_world_giant_tank
					}
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = mem_tomb_world_giant_tank
				}
				save_event_target_as = mem_tomb_world_location_3
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						has_planet_flag = mem_tomb_world_abandoned_mecha
					}
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = mem_tomb_world_abandoned_mecha
				}
				save_event_target_as = mem_tomb_world_location_4
			}
		}
		IF = {
			limit = {
				any_system = {
					any_planet = {
						has_planet_flag = mem_tomb_world_command_system
					}
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = mem_tomb_world_command_system
				}
				save_event_target_as = mem_tomb_world_location_5
			}
		}
		create_point_of_interest = {
			id = mem_tomb_world_location.1
			name = "Matrix"
			desc = "mem_tomb_world_location_1_desc"
#			event_chain = "mem_ea_uplifter_chain"
			location = event_target:mem_tomb_world_location_1
		}
		create_point_of_interest = {
			id = mem_tomb_world_location.2
			name = "Enterprise"
			desc = "mem_tomb_world_location_2_desc"
#			event_chain = "mem_ea_uplifter_chain"
			location = event_target:mem_tomb_world_location_2
		}
		create_point_of_interest = {
			id = mem_tomb_world_location.3
			name = "Giant Tank"
			desc = "mem_tomb_world_location_3_desc"
#			event_chain = "mem_ea_uplifter_chain"
			location = event_target:mem_tomb_world_location_3
		}
		create_point_of_interest = {
			id = mem_tomb_world_location.4
			name = "Abandoned Mecha"
			desc = "mem_tomb_world_location_4_desc"
#			event_chain = "mem_ea_uplifter_chain"
			location = event_target:mem_tomb_world_location_4
		}
		create_point_of_interest = {
			id = mem_tomb_world_location.5
			name = "Command System"
			desc = "mem_tomb_world_location_5_desc"
#			event_chain = "mem_ea_uplifter_chain"
			location = event_target:mem_tomb_world_location_5
		}
	}
}
